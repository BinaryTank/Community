---
- name: Check if unionfs service exists
  stat:
    path: "/etc/systemd/system/unionfs.service"
  register: unionfs_service

- name: Populate Service Facts
  service_facts:
  when: unionfs_service.stat.exists

- name: Get unionfs service state
  set_fact:
    unionfs_service_running: "{{ (services['unionfs.service'] is defined) and (services['unionfs.service']['state'] == \"running\") }}"
  when: unionfs_service.stat.exists

- name: Stop and disable existing unionfs service
  systemd: state=stopped name=unionfs enabled=no
  when: unionfs_service.stat.exists and unionfs_service_running

- name: Check if mergerfs service exists
  stat:
    path: "/etc/systemd/system/mnt-unionfs.mount"
  register: mergerfs_service

- name: Check if /mnt/unionfs is mounted
  command: mount
  register: m
  always_run: True
  changed_when: False

- name: Stop existing mnt-unionfs service
  systemd: state=stopped name=mnt-unionfs.mount
  when: "'/mnt/unionfs' in m.stdout and mergerfs_service.stat.exists"

- name: Install fuse
  apt:
    name: fuse
    state: present

- name: Import fuse.conf
  copy: src=fuse.conf dest=/etc/fuse.conf force=yes

- name: Install mergerfs
  apt:
    deb: https://github.com/trapexit/mergerfs/releases/download/2.25.1/mergerfs_2.25.1.ubuntu-{{ansible_distribution_release}}_amd64.deb
    state: present

- name: Import mergerfs.service
  template:
    src: mnt-unionfs.mount
    dest: /etc/systemd/system/mnt-unionfs.mount
    force: yes

- name: Start mergerfs service
  systemd: state=started name=mnt-unionfs.mount daemon_reload=yes enabled=yes

- name: Create /mnt/unionfs
  file: "path={{item}} state=directory mode=0775 owner={{user}} group={{user}}"
  with_items:
    - /mnt/unionfs
