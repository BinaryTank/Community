- name: "Setting CloudFlare DNS Record"
  include_role:
    name: cloudflare
  vars:
    subdomain: grafana

- name: Stop and remove any existing container
  docker_container: "name={{item}} state=absent"
  with_items:
    - grafana
    - influxdb
    - varken

- name: Create required directories
  file: "path={{item}} state=directory mode=0775 owner={{user}} group={{user}}"
  with_items:
    - /opt/grafana
    - /opt/influxdb
    - /opt/varken

- name: Create and start grafana container
  docker_container:
    name: grafana
    image: grafana/grafana
    pull: yes
    user: "{{uid}}"
    published_ports:
      - "127.0.0.1:3000:3000"
    env:
      PUID: "{{uid}}"
      PGID: "{{gid}}"
      VIRTUAL_HOST: "grafana.{{domain}}"
      VIRTUAL_PORT: 3000
      LETSENCRYPT_HOST: "grafana.{{domain}}"
      LETSENCRYPT_EMAIL: "{{email}}"
      GF_SERVER_ROOT_URL: "https://grafana.{{domain}}"
      GF_SECURITY_ADMIN_PASSWORD: "{{passwd}}"
    volumes:
      - "/etc/localtime:/etc/localtime:ro"
      - "/opt/grafana:/var/lib/grafana"
    labels:
      "com.github.cloudbox.cloudbox_managed": "true"
    networks:
      - name: cloudbox
        aliases:
          - grafana
    purge_networks: yes
    restart_policy: always
    state: started

- name: Create and start influxdb container
  docker_container:
    name: influxdb
    image: influxdb:latest
    pull: yes
    published_ports:
      - "0.0.0.0:8086:8086"
    env:
      PUID: "{{uid}}"
      PGID: "{{gid}}"
      INFLUXDB_DB: varken
      INFLUXDB_ADMIN_USER: admin
      INFLUXDB_ADMIN_PASSWORD: "{{passwd}}"
      INFLUXDB_USER: "{{user}}"
      INFLUXDB_USER_PASSWORD: "{{passwd}}"
    volumes:
      - "/etc/localtime:/etc/localtime:ro"
      - "influxdb:/opt/influxdb"
    labels:
      "com.github.cloudbox.cloudbox_managed": "true"
    networks:
      - name: cloudbox
        aliases:
          - influxdb
    purge_networks: yes
    restart_policy: always
    state: started

- name: Create and start varken container
  docker_container:
    name: varken
    image: boerderij/varken:nightly
    pull: yes
    env:
      PUID: "{{uid}}"
      PGID: "{{gid}}"
    volumes:
      - "/etc/localtime:/etc/localtime:ro"
      - "/opt/varken:/config"
    labels:
      "com.github.cloudbox.cloudbox_managed": "true"
    networks:
      - name: cloudbox
        aliases:
          - varken
    purge_networks: yes
    restart_policy: always
    state: started
